#!/bin/bash

#----------------------------------------------------------------------------
# DiscImage
# Copyright (C) 2007 Nathan Shearer
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to:
#   The Free Software Foundation Inc.
#   51 Franklin Street
#   Fifth Floor
#   Boston, MA
#   02110-1301
#   USA

COPYRIGHT="Copyright (C) 2010 Nathan Shearer"
VERSION="1.0.0.0"

# \brief Ensures dependencies are present
function discimage_check_dependencies
{
	for TOOL in bar cdrdao dd eject grep md5sum /usr/sbin/parted sed toc2cue pure-sfv; do
		if ! type $TOOL >/dev/null 2>/dev/null; then
			printf "discimage: \"$TOOL\" is required for DiscImage to work correctly.\n"
			exit
		fi
	done
}

# \brief Cleans up the environment and exits
# \param $1 The exit code
# \param #2 The exit message
function discimage_exit
{
	local EXIT="$1"
	local MESSAGE="$2"
	if [ "$EXIT" = "" ]; then
		EXIT=0
	fi
	case $EXIT in
		0) exit;;
		1) printf "discimage: $MESSAGE\n"; exit $EXIT;;
		*) printf "\ndiscimage: discimage_exit: Unknown exit code \"$EXIT\".\n"; exit $EXIT;;
	esac
}

# \brief Displays the help and exits the program
function discimage_help
{
	printf "DiscImage creates an image of CD/DVD/BD discs.\n\n"
	printf "Usage:\n"
	printf "  discimage [<device>] <basename>\n"
	printf "Options:\n"
	printf "  -h\n"
	printf "    Display this help message and exit.\n"
	printf "  -v\n"
	printf "    Print the version and exit.\n"
	printf "Examples:\n"
	printf "  discimage image\n"
	printf "  discimage /dev/dvd image\n"
	exit
}

# \brief Ensures that there is a disc in the drive
# \param $1 The device to load
function discimage_load_tray
{
	DEVICE="$1"
	if [ -b "$DEVICE" ]; then
		eject -t "$DEVICE" 2>/dev/null
		sleep 10
		if ! dd if="$DEVICE" of=/dev/null bs=2048 count=1 2>/dev/null; then
			while ! dd if="$DEVICE" of=/dev/null bs=2048 count=1 >/dev/null 2>/dev/null; do
				printf "No medium found at \"$DEVICE\"...\n"
				sleep 10
			done
			printf "\n"
		fi
	fi
}

# \brief Prints out the version and copyright and exits the program
function discimage_version
{
	printf "DiscImage $VERSION $COPYRIGHT\n"
	exit
}

#------------------------------------------------------------------------------
# default configuration

DEVICE=/dev/sr0
filestat=false
parted=/usr/sbin/parted

#------------------------------------------------------------------------------
# config files

if [ -r /etc/discimage/discimage.conf ]; then
	. /etc/discimage/discimage.conf
fi
if [ -r ~/.discimage.conf ]; then
	. ~/.discimage.conf
fi

#------------------------------------------------------------------------------
# command line arguments

if [ $# -eq 0 ]; then
	discimage_help
elif [ $# -eq 2 ]; then
	DEVICE="$1"
	shift
fi
BASENAME="$1"

#------------------------------------------------------------------------------
# begin execution

discimage_check_dependencies

discimage_load_tray "$DEVICE"
SIZE=`$parted -m ${DEVICE} unit b print 2>/dev/null | grep ${DEVICE} | cut -d : -f 2 | sed -r -e "s/([0-9]+)B/\\1/"`
#SIZE=`/sbin/fdisk -lu "$DEVICE" 2>/dev/null | grep bytes | head -n 1 | sed -r -e "s/.+? ([0-9]+) bytes/\\1/"`
# CD - 800MB
if [ $SIZE -lt 838860800 ]; then
	echo 1 | cdrdao read-cd --device "$DEVICE" --driver generic-mmc:0x20000 --datafile "$BASENAME".bin --read-raw --with-cddb -v 2 "$BASENAME".toc
	toc2cue "$BASENAME.toc" "$BASENAME.cue"
	md5sum "$BASENAME.bin" "$BASENAME.cue" "$BASENAME.toc" > "$BASENAME.md5"
	pure-sfv -c -s "$BASENAME.sfv" -f "$BASENAME.bin" "$BASENAME.cue" "$BASENAME.toc"
# DVD - 9GB
elif [ $SIZE -lt 9663676416 ]; then
	$filestat "$DEVICE" 1>/dev/null 2>/dev/null
	mplayer -dvd-device "$DEVICE" dvd:// -frames 64 -msglevel identify=6 1>/dev/null 2>/dev/null
	dd "if=$DEVICE" bs=2048 conv=noerror,sync 2>/dev/null | bar -s "$SIZE" -of "$BASENAME.iso" --no-summary 2>&1
	md5sum "$BASENAME.iso" > "$BASENAME.md5"
	pure-sfv -c -s "$BASENAME.sfv" -f "$BASENAME.iso"
# BD - 50GB
elif [ $SIZE -lt 53687091200 ]; then
	discimage_exit 1 "BD-ROM images not implemented."
else
	discimage_exit 1 "Unknown media type."
fi
#eject "$DEVICE"
discimage_exit
